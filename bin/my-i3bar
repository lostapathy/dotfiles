#!/usr/bin/env ruby
# my wrapper to tweak the output of i3status
# https://github.com/lostapathy/dotfiles

require 'open3'
require 'json'
$stdout.sync = true

def add_vpn(data)
  # FIXME: could probably only poll this every 10-15 seconds to save battery on lappy?
  vpn_status = `nmcli -t con | grep "wireguard\\|vpn" | grep -v ":\$" |awk -F: '{print $1}'`
  if vpn_status.size > 0
    vpns = vpn_status.strip.split("\n").join(', ')
    data.unshift( {"name" => "VPN Status","instance" => "#{vpns}","markup" => "none","full_text" => "VPN: #{vpns}", "color": "#00FF00"} )
  end
  data
end

def remove_battery(data)
  data.each_with_index do |item, index|
    if item['name'] == "battery"  && item['full_text'] == 'No battery'
      data.delete_at index
    end
  end

end

def remove_wifi(data)
  data.each_with_index do |item, index|
    if item['name'] == "wireless"  && item['full_text'] == 'W: down'
      data.delete_at index
    end
  end
end

def remove_ethernet(data)
  data.each_with_index do |item, index|
    if item['name'] == "ethernet"  && item['full_text'] == 'E: down'
      data.delete_at index
    end
  end
end

Open3.popen3("/usr/bin/i3status") do |stdin, stdout, stderr, wait_thread|
  stdin.close
  stdout.each_line do |line|
    comma = line.start_with?(',')

    begin
      data = JSON.parse(line.sub(/^,/, ''))
      data = add_vpn(data)
      remove_battery(data)
      # FIXME: only remove wifi if we don't also have ethernet?
      remove_wifi(data)
      remove_ethernet(data)

      if comma
        puts ", #{data.to_json}"
      else
        puts "#{data.to_json}"
      end
    rescue
      puts "#{line}"
    end
  end
end
